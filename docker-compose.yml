version: '3.7'
services:
  php-fpm:
    working_dir: /app
    depends_on:
      - redis
      - postgres
    build:
      context: .
      target: php_dev
      dockerfile: Dockerfile
    entrypoint: symfony local:server:start --no-tls --port=80
    volumes:
      - .:/app:cached
      - ./bin:/app/bin:consistent
      - ./config:/app/config:consistent
      - ./public:/app/public:consistent
      - ./src:/app/src:consistent
      - ./var:/app/var:consistent
      - ${HOME}/.config/gcloud:/root/.config/gcloud:cached
  messenger:
    working_dir: /app
    depends_on:
      - php-fpm
    build:
      context: .
      target: php_dev
      dockerfile: Dockerfile
#    entrypoint: php /app/bin/console messenger:consume async --time-limit=3600
    volumes:
      - .:/app
      - ./bin:/app/bin:consistent
      - ./config:/app/config:consistent
      - ./public:/app/public:consistent
      - ./src:/app/src:consistent
      - ./var:/app/var:consistent
  postgres:
    image: bitnami/postgresql:12
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      ALLOW_EMPTY_PASSWORD: 'yes'
    volumes:
      - ./.data/postgres:/var/lib/postgresql/data
  redis:
    image: "redis:alpine"
    command: redis-server
    environment:
      - REDIS_REPLICATION_MODE=master

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-14}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    volumes:
      - db-data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
###> doctrine/doctrine-bundle ###
  db-data:
###< doctrine/doctrine-bundle ###
